package $!{package.Controller};

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.cjc.dev.common.bean.transport.OneStepHttpConstant;
import com.cjc.dev.common.bean.transport.encrypt.OneStepEncrypt;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import lombok.AllArgsConstructor;
import javax.servlet.http.HttpServletRequest;

import org.springblade.core.log.annotation.ApiLog;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
#if($!{superEntityClass})
import org.springframework.web.bind.annotation.RequestParam;
#end
import $!{package.Entity}.$!{entity};
#set($voPackage=$package.Entity.replace("entity","dto"))
import $!{dtoPackage}.$!{entity}DTO;
import $!{dtoPackage}.$!{entity}ExcelDTO;
import $!{dtoPackage}.$!{entity}ImportDTO;
#set($wrapperPackage=$package.Entity.replace("entity","wrapper"))
#if($!{cfg.hasWrapper})
import $!{wrapperPackage}.$!{entity}Wrapper;
#end
import $!{package.Service}.$!{table.serviceName};
#if($!{superControllerClassPackage})
import $!{superControllerClassPackage};
#end
#if(!$!{superEntityClass})
#end

import java.io.IOException;

/**
 * $!{table.comment} 控制器
 *
 * @author codeGenerator
 * @since $!{date}
 */
@RestController
@AllArgsConstructor
@RequestMapping("/$!{table.entityPath}")
@Api(value = "$!{table.comment}", tags = "$!{table.comment}接口")
#if($!{superControllerClass})
public class $!{table.controllerName} extends $!{superControllerClass} {
#else
public class $!{table.controllerName} {
#end

	private $!{table.serviceName} $!{table.entityPath}Service;
	private OneStepEncrypt oneStepEncrypt;

#if($!{cfg.hasWrapper})

	@PostMapping("/detail")
	@ApiOperation(value = "查询详情", notes = "传入$!{table.entityPath}")
	public Object detail(HttpServletRequest request) throws IOException  {

		$!{entity} $!{table.entityPath} = oneStepEncrypt.getJsonObject(request, $!{entity}.class);
		return oneStepEncrypt.resultSuccessful($!{table.entityPath}Service.detail($!{table.entityPath}));
	}

	@PostMapping("/page")
	@ApiOperation(value = "分页", notes = "传入$!{table.entityPath}DTO")
	public Object page(HttpServletRequest request) throws IOException  {

        $!{entity}DTO $!{table.entityPath}DTO = oneStepEncrypt.getJsonObject(request, $!{entity}DTO.class);
		return oneStepEncrypt.resultSuccessful($!{table.entityPath}Service.page($!{table.entityPath}DTO));
	}
    @PostMapping("/list")
    @ApiOperation(value = "不分页查询列表", notes = "传入$!{table.entityPath}")
    public Object lists(HttpServletRequest request) throws IOException  {

        $!{entity} $!{table.entityPath} = oneStepEncrypt.getJsonObject(request, $!{entity}.class);
        return oneStepEncrypt.resultSuccessful($!{table.entityPath}Service.lists($!{table.entityPath}));
	}

#else
	@PostMapping("/detail")
	@ApiOperation(value = "查询详情", notes = "传入$!{table.entityPath}")
	public Object detail(HttpServletRequest request) throws IOException  {

		$!{entity} $!{table.entityPath} = oneStepEncrypt.getJsonObject(request, $!{entity}.class);
		return oneStepEncrypt.resultSuccessful($!{table.entityPath}Service.detail($!{table.entityPath}));
	}

    @PostMapping("/page")
    @ApiOperation(value = "分页", notes = "传入$!{table.entityPath}DTO")
    public Object page(HttpServletRequest request) throws IOException  {

        $!{entity}DTO $!{table.entityPath}DTO = oneStepEncrypt.getJsonObject(request, $!{entity}DTO.class);
        return oneStepEncrypt.resultSuccessful($!{table.entityPath}Service.page($!{table.entityPath}DTO));
    }

    @PostMapping("/list")
    @ApiOperation(value = "不分页查询列表", notes = "传入$!{table.entityPath}")
    public Object selectList(HttpServletRequest request) throws IOException  {

        $!{entity} $!{table.entityPath} = oneStepEncrypt.getJsonObject(request, $!{entity}.class);
        return oneStepEncrypt.resultSuccessful($!{table.entityPath}Service.selectList($!{table.entityPath}));
	}
#end

	@PostMapping("/save")
	@ApiLog("新增$!{table.comment}")
	@ApiOperation(value = "新增", notes = "传入$!{table.entityPath}")
	public Object insert(HttpServletRequest request) throws IOException {

        $!{entity} $!{table.entityPath} = oneStepEncrypt.getJsonObject(request, $!{entity}.class);
        $!{table.entityPath}Service.insert($!{table.entityPath});
        return oneStepEncrypt.resultSuccessful("保存成功");
	}

	@PostMapping("/update")
	@ApiLog("修改$!{table.comment}")
	@ApiOperation(value = "修改", notes = "传入$!{table.entityPath}")
	public Object updated(HttpServletRequest request) throws IOException  {

        $!{entity} $!{table.entityPath} = oneStepEncrypt.getJsonObject(request, $!{entity}.class);
        $!{table.entityPath}Service.updated($!{table.entityPath});
        return oneStepEncrypt.resultSuccessful("修改成功");
	}

	#if($!{superEntityClass})

    @ApiLog("删除$!{table.comment}")
    @GetMapping("/remove")
    @ApiOperation(value = "删除", notes = "传入ids")
    public Object removes(@ApiParam(value = "主键集合", required = true) @RequestParam String ids) {

        $!{table.entityPath}Service.removes(ids);
        return oneStepEncrypt.resultSuccessful("删除成功");
    }

	#else

	@ApiLog("删除$!{table.comment}")
	@PostMapping("/remove")
	@ApiOperation(value = "删除", notes = "传入ids")
	public Object removes(@ApiParam(value = "主键集合", required = true) @RequestParam String ids) {

        $!{table.entityPath}Service.removes(ids);
        return oneStepEncrypt.resultSuccessful("删除成功");
	}

	#end

	@PostMapping("/excel/upload")
	@ApiOperation(value = "上传excel")
	public Object uploadExcel(@RequestParam("file") MultipartFile file) {

		return oneStepEncrypt.resultSuccessful($!{table.entityPath}Service.uploadExcel(file));
	}

	@GetMapping("/excel/exportField")
	@ApiOperation(value = "返回excel可导出的字段")
	public Object getExportField() {

		return oneStepEncrypt.resultSuccessful($!{table.entityPath}Service.getField());
	}

	@GetMapping("/excel/matchField")
	@ApiOperation(value = "获取系统字段和表头字段已经匹配的关系")
	public Object getSysFieldAndExcelField(){

		return oneStepEncrypt.resultSuccessful($!{table.entityPath}Service.getSysFieldAndExcelField());
	}

	@RequestMapping("/excel/export")
	@ApiOperation(value = "导出excel")
	public void export(HttpServletRequest request) throws IOException {

		JSONObject jsonObject;
		if ("get".equals(request.getMethod().toLowerCase())) {
			jsonObject = JSON.parseObject(OneStepHttpConstant.oneStepDecode(request.getParameter("query")));
		} else {
			jsonObject = oneStepEncrypt.getJsonObject(request);
		}
		$!{entity}ExcelDTO $!{table.entityPath}ExcelDTO = jsonObject.toJavaObject($!{entity}ExcelDTO.class);
		//检索条件
		$!{table.entityPath}ExcelDTO.setFormInline(jsonObject.getObject("formInline", $!{entity}DTO.class));
		$!{table.entityPath}Service.export($!{table.entityPath}ExcelDTO);
	}

	@PostMapping("/excel/import")
	@ApiLog ("导入excel")
	@ApiOperation(value = "导入excel", notes = "excel中的信息根据规则写入数据库")
	public Object importExcel(HttpServletRequest request) throws IOException {

		$!{entity}ImportDTO importDTO = oneStepEncrypt.getJsonObject(request, $!{entity}ImportDTO.class);
		return oneStepEncrypt.resultSuccessful($!{table.entityPath}Service.importExcel(importDTO));
	}
}
